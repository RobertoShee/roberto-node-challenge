{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789abc",
		"name": "📝 API de Gestión de Tareas",
		"description": "API REST moderna con WebSockets para gestión de tareas.\n\n## 🚀 Características\n- CRUD completo de tareas\n- WebSockets en tiempo real\n- Validación robusta\n- Error handling profesional (RFC 7807)\n- Graceful shutdown\n- Logging estructurado\n\n## 🔗 Base URL\n- **Desarrollo**: http://localhost:3000\n- **Producción**: https://tu-dominio.com\n\n## 📊 Códigos de Estado\n- `200` - OK\n- `201` - Created\n- `204` - No Content\n- `400` - Bad Request\n- `404` - Not Found\n- `500` - Internal Server Error",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "123456"
	},
	"item": [
		{
			"name": "🔍 Health Check",
			"item": [
				{
					"name": "Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has ok property\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.ok).to.eql(true);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Endpoint para verificar que el servidor está funcionando correctamente.\n\n**Respuesta esperada:**\n```json\n{\n  \"ok\": true\n}\n```"
					},
					"response": [
						{
							"name": "Health Check - Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ok\": true\n}"
						}
					]
				}
			]
		},
		{
			"name": "📝 Gestión de Tareas",
			"item": [
				{
					"name": "Listar todas las tareas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Each task has required properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        jsonData.forEach(function(task) {",
									"            pm.expect(task).to.have.property('id');",
									"            pm.expect(task).to.have.property('titulo');",
									"            pm.expect(task).to.have.property('status');",
									"            pm.expect(task).to.have.property('fechaCreacion');",
									"            pm.expect(task).to.have.property('fechaActualizacion');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						},
						"description": "Obtiene la lista completa de tareas.\n\n**Respuesta esperada:**\n```json\n[\n  {\n    \"id\": 1,\n    \"titulo\": \"Completar proyecto\",\n    \"descripcion\": \"Descripción de la tarea\",\n    \"status\": \"pendiente\",\n    \"fechaCreacion\": \"2025-09-03T04:00:00.000Z\",\n    \"fechaActualizacion\": \"2025-09-03T04:00:00.000Z\"\n  }\n]\n```"
					},
					"response": [
						{
							"name": "Listar tareas - Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 1,\n    \"titulo\": \"Completar proyecto\",\n    \"descripcion\": \"Descripción de la tarea\",\n    \"status\": \"pendiente\",\n    \"fechaCreacion\": \"2025-09-03T04:00:00.000Z\",\n    \"fechaActualizacion\": \"2025-09-03T04:00:00.000Z\"\n  },\n  {\n    \"id\": 2,\n    \"titulo\": \"Revisar documentación\",\n    \"descripcion\": \"Revisar y actualizar la documentación del proyecto\",\n    \"status\": \"completada\",\n    \"fechaCreacion\": \"2025-09-03T03:00:00.000Z\",\n    \"fechaActualizacion\": \"2025-09-03T05:00:00.000Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "Obtener tarea por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Task has required properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('titulo');",
									"    pm.expect(jsonData).to.have.property('status');",
									"    pm.expect(jsonData).to.have.property('fechaCreacion');",
									"    pm.expect(jsonData).to.have.property('fechaActualizacion');",
									"});",
									"",
									"pm.test(\"Task ID matches request\", function () {",
									"    var jsonData = pm.response.json();",
									"    var requestedId = pm.request.url.path[1];",
									"    pm.expect(jsonData.id.toString()).to.eql(requestedId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"1"
							]
						},
						"description": "Obtiene una tarea específica por su ID.\n\n**Parámetros:**\n- `id` (path): ID de la tarea\n\n**Respuesta exitosa (200):**\n```json\n{\n  \"id\": 1,\n  \"titulo\": \"Completar proyecto\",\n  \"descripcion\": \"Descripción de la tarea\",\n  \"status\": \"pendiente\",\n  \"fechaCreacion\": \"2025-09-03T04:00:00.000Z\",\n  \"fechaActualizacion\": \"2025-09-03T04:00:00.000Z\"\n}\n```\n\n**Error (404):**\n```json\n{\n  \"type\": \"https://httpstatuses.com/404\",\n  \"title\": \"Tarea no encontrada\",\n  \"status\": 404,\n  \"detail\": \"No se encontró una tarea con el ID especificado\"\n}\n```"
					},
					"response": [
						{
							"name": "Obtener tarea - Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"titulo\": \"Completar proyecto\",\n  \"descripcion\": \"Descripción de la tarea\",\n  \"status\": \"pendiente\",\n  \"fechaCreacion\": \"2025-09-03T04:00:00.000Z\",\n  \"fechaActualizacion\": \"2025-09-03T04:00:00.000Z\"\n}"
						},
						{
							"name": "Obtener tarea - Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/999",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://httpstatuses.com/404\",\n  \"title\": \"Tarea no encontrada\",\n  \"status\": 404,\n  \"detail\": \"No se encontró una tarea con el ID especificado\"\n}"
						}
					]
				},
				{
					"name": "Crear nueva tarea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Task created with required properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('titulo');",
									"    pm.expect(jsonData).to.have.property('status');",
									"    pm.expect(jsonData).to.have.property('fechaCreacion');",
									"    pm.expect(jsonData).to.have.property('fechaActualizacion');",
									"});",
									"",
									"pm.test(\"Task has default status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql('pendiente');",
									"});",
									"",
									"// Guardar ID de la tarea creada para usar en otros tests",
									"pm.test(\"Save created task ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.globals.set(\"lastCreatedTaskId\", jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"titulo\": \"Nueva tarea de ejemplo\",\n  \"descripcion\": \"Esta es una descripción de ejemplo para la nueva tarea\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						},
						"description": "Crea una nueva tarea.\n\n**Body (JSON):**\n```json\n{\n  \"titulo\": \"Título de la tarea\",\n  \"descripcion\": \"Descripción opcional\"\n}\n```\n\n**Validaciones:**\n- `titulo`: Requerido, entre 1 y 100 caracteres\n- `descripcion`: Opcional, máximo 500 caracteres\n\n**Respuesta exitosa (201):**\n```json\n{\n  \"id\": 3,\n  \"titulo\": \"Nueva tarea\",\n  \"descripcion\": \"Descripción opcional\",\n  \"status\": \"pendiente\",\n  \"fechaCreacion\": \"2025-09-03T04:00:00.000Z\",\n  \"fechaActualizacion\": \"2025-09-03T04:00:00.000Z\"\n}\n```\n\n**Error de validación (400):**\n```json\n{\n  \"type\": \"https://httpstatuses.com/400\",\n  \"title\": \"Solicitud inválida\",\n  \"status\": 400,\n  \"detail\": \"Los datos enviados no cumplen las validaciones\",\n  \"errors\": {\n    \"titulo\": [\"El título debe tener entre 1 y 100 caracteres\"]\n  }\n}\n```"
					},
					"response": [
						{
							"name": "Crear tarea - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"titulo\": \"Nueva tarea de ejemplo\",\n  \"descripcion\": \"Esta es una descripción de ejemplo para la nueva tarea\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 3,\n  \"titulo\": \"Nueva tarea de ejemplo\",\n  \"descripcion\": \"Esta es una descripción de ejemplo para la nueva tarea\",\n  \"status\": \"pendiente\",\n  \"fechaCreacion\": \"2025-09-03T04:00:00.000Z\",\n  \"fechaActualizacion\": \"2025-09-03T04:00:00.000Z\"\n}"
						},
						{
							"name": "Crear tarea - Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"titulo\": \"\",\n  \"descripcion\": \"Descripción con título vacío\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://httpstatuses.com/400\",\n  \"title\": \"Solicitud inválida\",\n  \"status\": 400,\n  \"detail\": \"Los datos enviados no cumplen las validaciones\",\n  \"errors\": {\n    \"titulo\": [\"El título debe tener entre 1 y 100 caracteres\"]\n  }\n}"
						}
					]
				},
				{
					"name": "Actualizar estado de tarea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Task updated with new status\", function () {",
									"    var jsonData = pm.response.json();",
									"    var requestBody = JSON.parse(pm.request.body.raw);",
									"    pm.expect(jsonData.status).to.eql(requestBody.status);",
									"});",
									"",
									"pm.test(\"fechaActualizacion is updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    var creationDate = new Date(jsonData.fechaCreacion);",
									"    var updateDate = new Date(jsonData.fechaActualizacion);",
									"    pm.expect(updateDate.getTime()).to.be.at.least(creationDate.getTime());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"completada\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"1"
							]
						},
						"description": "Actualiza el estado de una tarea existente.\n\n**Parámetros:**\n- `id` (path): ID de la tarea\n\n**Body (JSON):**\n```json\n{\n  \"status\": \"completada\"\n}\n```\n\n**Estados válidos:**\n- `pendiente`\n- `completada`\n- `cancelada`\n\n**Respuesta exitosa (200):**\n```json\n{\n  \"id\": 1,\n  \"titulo\": \"Completar proyecto\",\n  \"descripcion\": \"Descripción de la tarea\",\n  \"status\": \"completada\",\n  \"fechaCreacion\": \"2025-09-03T04:00:00.000Z\",\n  \"fechaActualizacion\": \"2025-09-03T05:00:00.000Z\"\n}\n```\n\n**Error de validación (400):**\n```json\n{\n  \"type\": \"https://httpstatuses.com/400\",\n  \"title\": \"Solicitud inválida\",\n  \"status\": 400,\n  \"detail\": \"Los datos enviados no cumplen las validaciones\",\n  \"errors\": {\n    \"status\": [\"El status debe ser: pendiente, completada, cancelada\"]\n  }\n}\n```"
					},
					"response": [
						{
							"name": "Actualizar tarea - Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"completada\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"titulo\": \"Completar proyecto\",\n  \"descripcion\": \"Descripción de la tarea\",\n  \"status\": \"completada\",\n  \"fechaCreacion\": \"2025-09-03T04:00:00.000Z\",\n  \"fechaActualizacion\": \"2025-09-03T05:00:00.000Z\"\n}"
						},
						{
							"name": "Actualizar tarea - Validation Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"estado_invalido\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"1"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://httpstatuses.com/400\",\n  \"title\": \"Solicitud inválida\",\n  \"status\": 400,\n  \"detail\": \"Los datos enviados no cumplen las validaciones\",\n  \"errors\": {\n    \"status\": [\"El status debe ser: pendiente, completada, cancelada\"]\n  }\n}"
						},
						{
							"name": "Actualizar tarea - Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"completada\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/999",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://httpstatuses.com/404\",\n  \"title\": \"Tarea no encontrada\",\n  \"status\": 404,\n  \"detail\": \"No se encontró una tarea con el ID especificado\"\n}"
						}
					]
				},
				{
					"name": "Eliminar tarea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.test(\"Response body is empty\", function () {",
									"    pm.expect(pm.response.text()).to.be.empty;",
									"});",
									"",
									"pm.test(\"Response time is acceptable\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{lastCreatedTaskId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{lastCreatedTaskId}}"
							]
						},
						"description": "Elimina una tarea existente.\n\n**Parámetros:**\n- `id` (path): ID de la tarea a eliminar\n\n**Respuesta exitosa (204):**\n- Sin contenido en el body\n- Indica que la tarea fue eliminada exitosamente\n\n**Error (404):**\n```json\n{\n  \"type\": \"https://httpstatuses.com/404\",\n  \"title\": \"Tarea no encontrada\",\n  \"status\": 404,\n  \"detail\": \"No se encontró una tarea con el ID especificado\"\n}\n```\n\n**Nota:** Este endpoint usa la variable `{{lastCreatedTaskId}}` que se guarda automáticamente cuando se crea una tarea."
					},
					"response": [
						{
							"name": "Eliminar tarea - Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"3"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Eliminar tarea - Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/999",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://httpstatuses.com/404\",\n  \"title\": \"Tarea no encontrada\",\n  \"status\": 404,\n  \"detail\": \"No se encontró una tarea con el ID especificado\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "❌ Casos de Error",
			"item": [
				{
					"name": "Error 500 - Internal Server Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/invalid-id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"invalid-id"
							]
						},
						"description": "Ejemplo de cómo se maneja un error interno del servidor.\n\n**Respuesta (500):**\n```json\n{\n  \"type\": \"https://httpstatuses.com/500\",\n  \"title\": \"Error interno del servidor\",\n  \"status\": 500,\n  \"detail\": \"Ocurrió un error inesperado en el servidor\"\n}\n```"
					},
					"response": [
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/invalid-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"invalid-id"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://httpstatuses.com/500\",\n  \"title\": \"Error interno del servidor\",\n  \"status\": 500,\n  \"detail\": \"Ocurrió un error inesperado en el servidor\"\n}"
						}
					]
				},
				{
					"name": "Error 400 - Bad Request (Validación)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"titulo\": \"\",\n  \"descripcion\": \"a\".repeat(501)\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						},
						"description": "Ejemplo de error de validación con múltiples campos inválidos.\n\n**Body con errores:**\n```json\n{\n  \"titulo\": \"\",\n  \"descripcion\": \"descripción que excede los 500 caracteres...\"\n}\n```\n\n**Respuesta (400):**\n```json\n{\n  \"type\": \"https://httpstatuses.com/400\",\n  \"title\": \"Solicitud inválida\",\n  \"status\": 400,\n  \"detail\": \"Los datos enviados no cumplen las validaciones\",\n  \"errors\": {\n    \"titulo\": [\"El título debe tener entre 1 y 100 caracteres\"],\n    \"descripcion\": [\"La descripción no puede exceder 500 caracteres\"]\n  }\n}\n```"
					},
					"response": [
						{
							"name": "Validation Error - Multiple Fields",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"titulo\": \"\",\n  \"descripcion\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://httpstatuses.com/400\",\n  \"title\": \"Solicitud inválida\",\n  \"status\": 400,\n  \"detail\": \"Los datos enviados no cumplen las validaciones\",\n  \"errors\": {\n    \"titulo\": [\"El título debe tener entre 1 y 100 caracteres\"],\n    \"descripcion\": [\"La descripción no puede exceder 500 caracteres\"]\n  }\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Script global que se ejecuta antes de cada request",
					"console.log('🚀 Ejecutando request a:', pm.request.url.toString());",
					"",
					"// Agregar timestamp a headers para debugging",
					"pm.request.headers.add({",
					"    key: 'X-Request-Timestamp',",
					"    value: new Date().toISOString()",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Script global que se ejecuta después de cada request",
					"console.log('✅ Response status:', pm.response.status, pm.response.code);",
					"console.log('⏱️ Response time:', pm.response.responseTime + 'ms');",
					"",
					"// Test global para verificar headers de respuesta",
					"pm.test('Response has Content-Type header', function () {",
					"    if (pm.response.code !== 204) { // 204 No Content no tiene Content-Type",
					"        pm.response.to.have.header('Content-Type');",
					"    }",
					"});",
					"",
					"// Test global para tiempo de respuesta",
					"pm.test('Response time is acceptable', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string",
			"description": "URL base del API. Cambiar a producción cuando sea necesario."
		},
		{
			"key": "lastCreatedTaskId",
			"value": "",
			"type": "string",
			"description": "ID de la última tarea creada. Se actualiza automáticamente."
		}
	]
}